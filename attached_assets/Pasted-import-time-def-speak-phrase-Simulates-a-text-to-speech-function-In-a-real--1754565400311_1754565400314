import time

def speak(phrase):
    """
    Simulates a text-to-speech function.
    In a real application, this would use a library like pyttsx3 or gTTS.
    """
    print(f"ðŸ”Š Speaking: '{phrase}'")
    time.sleep(1)  # Simulate speech duration

def medical_phrasebook():
    """
    Implements a simple, categorized medical phrasebook.
    """
    phrases = {
        "Emergency": [
            "Are you having chest pain?",
            "Can you tell me where it hurts?",
            "Do you need immediate assistance?",
            "Are you allergic to any medications?",
            "We need to get you to the hospital."
        ],
        "Diagnosis": [
            "What symptoms are you experiencing?",
            "How long have you had these symptoms?",
            "Does the pain come and go?",
            "Can you describe the pain?",
            "Have you had this before?"
        ],
        "Symptoms": [
            "I feel dizzy.",
            "I have a fever.",
            "My throat is sore.",
            "I have a headache.",
            "My stomach hurts."
        ],
        "Consent": [
            "Do you understand the procedure?",
            "Do you consent to this treatment?",
            "Please sign here to give your consent.",
            "We need your permission to proceed.",
            "You have the right to refuse treatment."
        ]
    }

    while True:
        print("\n--- Medical Phrasebook ---")
        print("Select a category by entering its number:")
        categories = list(phrases.keys())
        for i, category in enumerate(categories):
            print(f"  {i+1}. {category}")
        print("  0. Exit")

        try:
            category_choice = int(input("Your choice: "))
            if category_choice == 0:
                print("Exiting Phrasebook. Goodbye! ðŸ‘‹")
                break
            
            category_index = category_choice - 1
            if 0 <= category_index < len(categories):
                selected_category = categories[category_index]
                print(f"\n--- {selected_category} Phrases ---")
                
                category_phrases = phrases[selected_category]
                for i, phrase in enumerate(category_phrases):
                    print(f"  {i+1}. {phrase}")
                
                print("\nTap a phrase to speak it (enter its number) or enter 0 to go back.")
                
                phrase_choice = int(input("Your choice: "))
                if phrase_choice == 0:
                    continue

                phrase_index = phrase_choice - 1
                if 0 <= phrase_index < len(category_phrases):
                    selected_phrase = category_phrases[phrase_index]
                    speak(selected_phrase)
                else:
                    print("Invalid phrase choice. Please try again.")
            else:
                print("Invalid category choice. Please try again.")
        
        except ValueError:
            print("Invalid input. Please enter a number.")

if __name__ == "__main__":
    medical_phrasebook()
